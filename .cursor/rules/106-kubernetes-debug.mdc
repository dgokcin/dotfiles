---
description: ALWAYS use when debugging Kubernetes problems to ensure proper context verification and systematic troubleshooting
globs: **/*.{yaml,yml}
tags: [kubernetes, k8s, debugging, devops]
priority: 2
version: 1.0.0
---

# Kubernetes Debugging Protocol

## Context
- When user asks to debug or troubleshoot Kubernetes-related issues
- When diagnosing pod, deployment, service, or cluster problems
- When investigating Kubernetes resource availability or connectivity issues

## Requirements
- ALWAYS verify current Kubernetes context before troubleshooting
- CHECK cluster connectivity and authentication status first
- GATHER complete resource state information before making changes
- USE a systematic debugging approach moving from cluster to pod level
- DOCUMENT each finding and resolution step for future reference
- VERIFY fixes with appropriate validation commands

## Verification Commands
- Check current context: `kubectl config current-context`
- Verify cluster access: `kubectl cluster-info`
- List namespaces: `kubectl get namespaces`
- Check node status: `kubectl get nodes`

## Debugging Process
1. VERIFY context and cluster access
2. IDENTIFY affected resources (pods, deployments, services)
3. CHECK resource state with appropriate describe and logs commands
4. ANALYZE error messages and events
5. IMPLEMENT targeted fixes based on findings
6. VALIDATE fix effectiveness
7. DOCUMENT resolution steps

## Examples

<example>
User: I need help debugging why my deployment isn't creating any pods.

AI: I'll help debug your Kubernetes deployment issue. Let's first verify what cluster we're working with:

```
kubectl config current-context
kubectl get namespaces
```

Now let's examine your deployment:

```
kubectl describe deployment your-deployment
kubectl get events --sort-by='.lastTimestamp'
```

Let's see what error events might be occurring...
</example>

<example type="invalid">
User: My pods are crashing, can you help debug?

AI: Let's check the pod logs:

```
kubectl logs failing-pod -n your-namespace
```

I'll make some changes to your deployment to fix the issue...

[This example is invalid because it jumps directly to checking logs without first verifying the current context and cluster state]
</example>